version: "3.9"

services:
  db:
    image: postgres:15
    container_name: ml_db
    ports:
      - "5432:5432"
    env_file:
      - backend/.env
    environment:
      POSTGRES_DB: ml_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@db:5432/ml_db?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - db

  pgadmin:
    image: dpage/pgadmin4
    container_name: ml_pgadmin
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - db

  backend:
    build:
      context: ./backend
    container_name: ml_backend
    ports:
      - "8000:8000"
    env_file:
      - backend/.env
    volumes:
      - ./backend:/app
    depends_on:
      - db

  ai_predictive:
    build:
      context: ./modules/ai_predictive
      dockerfile: Dockerfile
    container_name: ml_ai_predictive
    ports:
      - "8010:8000"
    env_file:
      - modules/ai_predictive/.env
    volumes:
      - ./modules/ai_predictive/models:/app/models
      - ./modules/data:/app/data
    depends_on:
      - db

  acos_service:
    build:
      context: ./modules/acos_service
      dockerfile: Dockerfile
    container_name: ml_acos_service
    ports:
      - "8020:8000"
    env_file:
      - modules/acos_service/.env
    volumes:
      - ./modules/acos_service/models:/app/models
      - ./modules/data:/app/data
    depends_on:
      - db

  gamification_service:
    build:
      context: ./modules/gamification_service
      dockerfile: Dockerfile
    container_name: ml_gamification_service
    ports:
      - "8030:8000"
    env_file:
      - modules/gamification_service/.env
    volumes:
      - ./modules/gamification_service/models:/app/models
      - ./modules/data:/app/data
    depends_on:
      - db

  seo_intelligence:
    build:
      context: ./modules/seo_intelligence
      dockerfile: Dockerfile
    container_name: ml_seo_intelligence
    ports:
      - "8040:8000"
    env_file:
      - modules/seo_intelligence/.env
    volumes:
      - ./modules/seo_intelligence/models:/app/models
      - ./modules/data:/app/data
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ml_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: ml_grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - db

  prometheus:
    image: prom/prometheus:latest
    container_name: ml_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - default
    depends_on:
      - backend
      - postgres_exporter

volumes:
  pgdata:
  grafana-data:

networks:
  default:
    driver: bridge
