name: Tests and Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ml_db_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio coverage httpx

    - name: Run tests with coverage
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ml_db_test
        SECRET_KEY: test-secret-key-for-ci
        ADMIN_EMAIL: admin@test.com
        ADMIN_PASSWORD: testpassword
      run: |
        cd backend
        python -m pytest --cov=app --cov-report=xml --cov-report=term-missing --cov-fail-under=80

    - name: Upload coverage to Codecov
      if: github.event_name == 'pull_request'
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage
        fail_ci_if_error: true

    - name: Coverage Report
      run: |
        cd backend
        coverage report --show-missing
        echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
        coverage report --format=markdown >> $GITHUB_STEP_SUMMARY

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8 mypy

    - name: Run Black
      run: |
        cd backend
        black --check --diff .

    - name: Run isort
      run: |
        cd backend
        isort --check-only --diff .

    - name: Run flake8
      run: |
        cd backend
        flake8 app tests

    - name: Run mypy
      run: |
        cd backend
        mypy app --ignore-missing-imports