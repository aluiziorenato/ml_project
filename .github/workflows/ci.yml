name: CI
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-asyncio pytest-cov email-validator bcrypt aiofiles
      - name: Set up test environment
        run: |
          cd backend
          cp .env.example .env.test
          echo "DATABASE_URL=postgresql+psycopg2://test_user:test_password@localhost:5432/test_db" >> .env.test
          echo "ML_CLIENT_ID=test_client_id" >> .env.test
          echo "ML_CLIENT_SECRET=test_client_secret" >> .env.test
          echo "SECRET_KEY=test_secret_key_for_testing_only" >> .env.test
        env:
          DATABASE_URL: postgresql+psycopg2://test_user:test_password@localhost:5432/test_db
      - name: Run tests
        run: |
          cd backend
          python -m pytest tests/ -v --cov=app --cov-report=term-missing
        env:
          DATABASE_URL: postgresql+psycopg2://test_user:test_password@localhost:5432/test_db
          ML_CLIENT_ID: test_client_id
          ML_CLIENT_SECRET: test_client_secret
          SECRET_KEY: test_secret_key_for_testing_only
          
name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r backend/requirements.txt

      - name: Run tests
        run: pytest backend/tests

      - name: Deploy (exemplo)
        run: echo "Deploy em produção iniciado..."
