version: '3.8'

services:
  # Core Services
  simulator-service:
    build: ./simulator_service
    ports:
      - "8001:8001"
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./shared:/app/shared
    networks:
      - ml-network
    depends_on:
      - prometheus
    restart: unless-stopped

  learning-service:
    build: ./learning_service
    ports:
      - "8002:8002"
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./shared:/app/shared
    networks:
      - ml-network
    depends_on:
      - prometheus
    restart: unless-stopped

  optimizer-ai:
    build: ./optimizer_ai
    ports:
      - "8003:8003"
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./shared:/app/shared
    networks:
      - ml-network
    depends_on:
      - prometheus
    restart: unless-stopped

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ml_project
      - PYTHONPATH=/app
    volumes:
      - ./shared:/app/shared
    networks:
      - ml-network
    depends_on:
      - postgres
      - prometheus
    restart: unless-stopped

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_SIMULATOR_URL=http://localhost:8001
      - REACT_APP_LEARNING_URL=http://localhost:8002
      - REACT_APP_OPTIMIZER_URL=http://localhost:8003
    networks:
      - ml-network
    depends_on:
      - backend
      - simulator-service
      - learning-service
      - optimizer-ai
    restart: unless-stopped

  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=ml_project
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ml-network
    restart: unless-stopped

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - ml-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana-dashboard.json:/etc/grafana/provisioning/dashboards/ml-dashboard.json
    networks:
      - ml-network
    depends_on:
      - prometheus
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    networks:
      - ml-network
    restart: unless-stopped

  # Development Tools
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - ml-network
    depends_on:
      - postgres
    restart: unless-stopped

  # Load Balancer (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - ml-network
    depends_on:
      - frontend
      - backend
      - simulator-service
      - learning-service
      - optimizer-ai
    restart: unless-stopped

networks:
  ml-network:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  pgadmin_data: